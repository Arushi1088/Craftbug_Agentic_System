# Enhanced Word Application Scenario Testing
# Deep analysis scenarios for comprehensive UX evaluation

scenarios:
  # Existing scenarios (1.1 - 1.3)
  - id: "1.1"
    name: "Basic Document Navigation"
    description: "Navigate and interact with Word interface elements"
    task_goal: "Successfully navigate Word application and open basic functions"
    steps:
      - action: "navigate"
        target: "{mock_url}"
        description: "Open Word application"
        expected_outcome: "Word interface loads completely"
      - action: "wait"
        duration: 1000
        description: "Allow page to fully load"
      - action: "click"
        target: "#comments-tab"
        description: "Click Comments tab to open comments panel"
        expected_outcome: "Comments panel becomes visible"
      - action: "wait"
        duration: 500
        description: "Allow panel animation to complete"

  - id: "1.2"
    name: "Comment Resolution Workflow"
    description: "Complete multi-step comment resolution process"
    task_goal: "Review and resolve document comments efficiently"
    steps:
      - action: "navigate"
        target: "{mock_url}"
        description: "Open Word document with comments"
        screen_context: "Document editor with multiple comments visible"
      - action: "click"
        target: "#comments-tab"
        description: "Open comments panel"
        expected_outcome: "Comments panel slides in from right"
      - action: "wait"
        duration: 500
        description: "Wait for panel to fully expand"
      - action: "click"
        target: ".resolve-button"
        description: "Click resolve button on first comment"
        expected_outcome: "Comment marked as resolved"
        html_snapshot: "Comment thread with resolve button and status indicator"
      - action: "wait"
        duration: 300
        description: "Allow resolve animation"
      - action: "click"
        target: ".resolve-button"
        description: "Resolve second comment"
        expected_outcome: "Second comment resolved"
      - action: "wait"
        duration: 300
        description: "Wait for UI update"

  - id: "1.3"
    name: "Document Editing and Formatting"
    description: "Edit document content and apply basic formatting"
    task_goal: "Modify document text and apply formatting options"
    steps:
      - action: "navigate"
        target: "{mock_url}"
        description: "Open Word application"
      - action: "click"
        target: "#editor-content"
        description: "Click in document editor area"
        expected_outcome: "Cursor appears in text editor"
      - action: "type"
        target: "#editor-content"
        text: "This is a test document for UX analysis."
        description: "Type sample text"
        expected_outcome: "Text appears in editor"
      - action: "wait"
        duration: 500
        description: "Allow text rendering"

  # NEW SCENARIOS (1.4 - 1.6)
  - id: "1.4"
    name: "Resolve Tracked Changes from Review Tab"
    description: "Navigate to Review tab and process tracked changes in document"
    task_goal: "Accept or reject tracked changes using Review tab controls"
    steps:
      - action: "navigate"
        target: "{mock_url}"
        description: "Open Word document with tracked changes"
        screen_context: "Document with visible tracked changes and Review tab available"
        html_snapshot: "<div class='review-tab'><button>Accept</button><button>Reject</button></div>"
      - action: "click"
        target: "#review-tab"
        description: "Click Review tab in ribbon"
        expected_outcome: "Review tab becomes active, showing track changes controls"
        screen_context: "Review ribbon with Accept/Reject buttons visible"
      - action: "wait"
        duration: 800
        description: "Allow Review tab to load controls"
      - action: "click"
        target: ".track-changes-toggle"
        description: "Enable Track Changes if not already on"
        expected_outcome: "Track Changes indicator shows active state"
        html_snapshot: "<button class='track-changes-toggle active'>Track Changes</button>"
      - action: "click"
        target: ".accept-change-btn"
        description: "Accept first tracked change"
        expected_outcome: "First change accepted, highlighted text becomes normal"
        screen_context: "Document with one less tracked change visible"
      - action: "wait"
        duration: 500
        description: "Allow change processing animation"
      - action: "click"
        target: ".reject-change-btn"
        description: "Reject second tracked change"
        expected_outcome: "Second change rejected, change reverted"
        screen_context: "Document showing change has been reverted"
      - action: "click"
        target: ".next-change-btn"
        description: "Navigate to next tracked change"
        expected_outcome: "Document scrolls to next change, change highlighted"
        html_snapshot: "<div class='tracked-change highlighted'>Next change text</div>"

  - id: "1.5"
    name: "Insert Image and Add Alt Text"
    description: "Insert an image into document and configure accessibility alt text"
    task_goal: "Add image with proper accessibility attributes for screen readers"
    steps:
      - action: "navigate"
        target: "{mock_url}"
        description: "Open Word document for image insertion"
        screen_context: "Clean document ready for content insertion"
      - action: "click"
        target: "button:contains(Insert)"
        description: "Click Insert tab in ribbon"
        expected_outcome: "Insert tab becomes active, showing insertion options"
        screen_context: "Insert ribbon with image, table, and other insertion tools"
        html_snapshot: "<div class='insert-tab'><button class='image-btn'>Pictures</button></div>"
      - action: "wait"
        duration: 500
        description: "Allow Insert tab to fully load"
      - action: "click"
        target: ".image-insert-btn"
        description: "Click Pictures button to insert image"
        expected_outcome: "Image insertion dialog opens"
        screen_context: "Modal dialog for selecting image files"
        html_snapshot: "<dialog class='image-dialog'><input type='file' accept='image/*'></dialog>"
      - action: "wait"
        duration: 1000
        description: "Allow dialog to render"
      - action: "click"
        target: ".sample-image"
        description: "Select sample image from dialog"
        expected_outcome: "Image selected and preview shown"
        screen_context: "Image preview visible in dialog"
      - action: "click"
        target: ".insert-image-confirm"
        description: "Confirm image insertion"
        expected_outcome: "Image inserted into document at cursor position"
        screen_context: "Document showing inserted image with selection handles"
        html_snapshot: "<img class='inserted-image selected' src='sample.jpg' alt=''>"
      - action: "wait"
        duration: 800
        description: "Allow image insertion to complete"
      - action: "right_click"
        target: ".inserted-image"
        description: "Right-click on inserted image"
        expected_outcome: "Context menu appears with image options"
        screen_context: "Context menu showing 'Alt Text', 'Format', 'Delete' options"
      - action: "click"
        target: ".alt-text-option"
        description: "Click Alt Text option from context menu"
        expected_outcome: "Alt text dialog opens"
        html_snapshot: "<dialog class='alt-text-dialog'><textarea placeholder='Describe image'></textarea></dialog>"
      - action: "type"
        target: ".alt-text-input"
        text: "A professional chart showing quarterly sales data with upward trend"
        description: "Enter descriptive alt text for accessibility"
        expected_outcome: "Alt text entered in dialog field"
      - action: "click"
        target: ".alt-text-save"
        description: "Save alt text for image"
        expected_outcome: "Alt text saved, dialog closes, image now has accessibility label"
        screen_context: "Image in document now has proper alt attribute for screen readers"

  - id: "1.6"
    name: "Share Document with Permission Settings"
    description: "Share document with specific users and configure permission levels"
    task_goal: "Share document securely with appropriate access controls"
    steps:
      - action: "navigate"
        target: "{mock_url}"
        description: "Open Word document to share"
        screen_context: "Document ready for sharing with content visible"
      - action: "click"
        target: ".share-button"
        description: "Click Share button in top-right corner"
        expected_outcome: "Share panel opens on right side"
        screen_context: "Share panel visible with permission options"
        html_snapshot: "<div class='share-panel'><input placeholder='Enter email'><select class='permission-level'></select></div>"
      - action: "wait"
        duration: 600
        description: "Allow share panel to slide in"
      - action: "type"
        target: ".email-input"
        text: "colleague@company.com"
        description: "Enter email address of person to share with"
        expected_outcome: "Email address appears in input field"
        screen_context: "Email field populated with valid email address"
      - action: "click"
        target: ".permission-dropdown"
        description: "Click permission level dropdown"
        expected_outcome: "Dropdown opens showing permission options"
        screen_context: "Dropdown showing 'Can edit', 'Can comment', 'Can view' options"
        html_snapshot: "<select class='permission-dropdown open'><option>Can edit</option><option>Can comment</option><option>Can view</option></select>"
      - action: "click"
        target: "option[value='Can comment']"
        description: "Select 'Can comment' permission level"
        expected_outcome: "Can comment option selected, dropdown closes"
        screen_context: "Permission set to comment-only access"
      - action: "click"
        target: ".add-message-toggle"
        description: "Click to add optional message"
        expected_outcome: "Message textarea appears"
        html_snapshot: "<textarea class='share-message' placeholder='Add a message (optional)'></textarea>"
      - action: "type"
        target: ".share-message"
        text: "Please review this document and add your feedback in the comments. Thanks!"
        description: "Add personal message to share invitation"
        expected_outcome: "Message text entered"
      - action: "click"
        target: ".send-share-button"
        description: "Click Send button to share document"
        expected_outcome: "Share invitation sent, confirmation message shown"
        screen_context: "Success message confirming document has been shared"
        html_snapshot: "<div class='share-success'>Document shared successfully!</div>"
      - action: "wait"
        duration: 1000
        description: "Allow confirmation to display"
      - action: "click"
        target: ".share-panel-close"
        description: "Close share panel"
        expected_outcome: "Share panel slides closed, document view restored"
        screen_context: "Back to normal document view with sharing completed"

# Scenario Analysis Configuration
analysis:
  focus_areas:
    - navigation_efficiency
    - task_completion_success
    - accessibility_compliance
    - visual_design_consistency
    - performance_optimization
    - error_prevention
    - user_feedback_clarity
  
  ai_analysis_prompts:
    context_awareness: "Analyze this Office application workflow for realistic user frustrations"
    heuristic_evaluation: "Evaluate against Nielsen's 10 usability heuristics"
    accessibility_focus: "Identify WCAG compliance gaps and screen reader challenges"
    performance_review: "Assess interaction response times and loading feedback"
  
  expected_issue_categories:
    - cognitive_load
    - accessibility
    - navigation
    - interaction
    - visual_design
    - performance
